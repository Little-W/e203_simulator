CONF_DEFINED = 1
ARCH := $(shell uname -m)

SIM_ROOT_DIR ?=

DEFAULT_RISCV_ARCH ?= rv32imac
DEFAULT_RISCV_ABI ?= ilp32

TEST_SRCDIR := ${SIM_ROOT_DIR}/test_src

BUILD_DIR      := ${SIM_ROOT_DIR}/build
C_SRC_DIR := ${SIM_ROOT_DIR}/csrc
C_BUILD_DIR = ${BUILD_DIR}/c_compiled

#Compile setting
USE_OPEN_GNU_GCC ?= 1 
USE_HB_SDK := 1
TARGET := main
SRCDIRS ?= ${C_SRC_DIR} src
TEST_SRCDIRS ?= ${TEST_SRCDIR} src
INCDIRS ?= ${C_SRC_DIR} inc
COMMON_FLAGS ?= -O2
#end

#hardware simulation settings
    # SIM_TOOL : vcs iverilog verilator4 verilator5
SIM_TOOL      := verilator5

PROGRAM_NAME     := ${TARGET}
TEST_PROGRAM_NAME     := rv32mi-p-breakpoint
PROGRAM     := ${BUILD_DIR}/c_compiled/${PROGRAM_NAME}
TEST_PROGRAM     := ${BUILD_DIR}/test_compiled/${TEST_PROGRAM_NAME}
SIM_OUT_DIR     := sim_out
TEST_RUNDIR := test_out
VCS_DIR ?=
DUMPWAVE := 1
#end


#SOC setting
CORE     := e203
CFG      := ${CORE}_config
XLEN     := 32
SOC      := hbirdv2
BOARD    ?= ddr200t
DOWNLOAD ?= ilm
#end

DEPENDENCY_DIR := $(SIM_ROOT_DIR)/deps/
SOTFWARE_DEPS_ROOT := $(DEPENDENCY_DIR)/software-level
SOTFWARE_TOOLS_DIR := $(SOTFWARE_DEPS_ROOT)/bin
SOTFWARE_MAKEFILES_DIR =$(SOTFWARE_DEPS_ROOT)/makefiles
SOTFWARE_LIBS_DIR := $(SOTFWARE_DEPS_ROOT)/libs
SOTFWARE_TEST_DIR := $(SOTFWARE_DEPS_ROOT)/test/
ISA_TEST_DIR := $(SOTFWARE_TEST_DIR)/isa_test
RISCV_BENCHMARK_DIR := $(SOTFWARE_TEST_DIR)/benchmarks
COREMARK_DIR := $(SOTFWARE_TEST_DIR)/coremark
DHRYSTONE_DIR := $(SOTFWARE_TEST_DIR)/dhrystone

HARDWARE_DEPS_ROOT := $(DEPENDENCY_DIR)/hardware-level
HARDWARE_TOOLS_DIR := $(HARDWARE_DEPS_ROOT)/bin
HARDWARE_SRC_DIR := $(HARDWARE_DEPS_ROOT)/src

E203_SRC := ${HARDWARE_SRC_DIR}/e203_src/

IVERILOG_DIR := ${HARDWARE_TOOLS_DIR}/iverilog/bin
VERILATOR_ROOT_DIR :=   /usr/local/share/${SIM_TOOL}
VERILATOR_BIN_DIR :=   /usr/local/share/${SIM_TOOL}/bin
VERILATOR_ROOT :=  ${HARDWARE_TOOLS_DIR}/${SIM_TOOL}/share/verilator/

COMPILE_PREFIX ?= riscv64-unknown-elf-
ifeq ($(USE_OPEN_GNU_GCC),0)
RISCV_GCC_ROOT ?= $(SOTFWARE_TOOLS_DIR)/gcc
else
RISCV_GCC_ROOT ?= $(SOTFWARE_TOOLS_DIR)/gcc_open
endif
RISCV_OPENOCD_ROOT ?= $(SOTFWARE_TOOLS_DIR)/openocd
QEMU_EXEC ?= $(SOTFWARE_TOOLS_DIR)/qemu/bin/qemu-riscv32

CC      := $(abspath $(RISCV_GCC_ROOT)/bin/$(COMPILE_PREFIX)gcc)
LD      := $(abspath $(RISCV_GCC_ROOT)/bin/$(COMPILE_PREFIX)ld)
CXX     := $(abspath $(RISCV_GCC_ROOT)/bin/$(COMPILE_PREFIX)g++)
OBJDUMP := $(abspath $(RISCV_GCC_ROOT)/bin/$(COMPILE_PREFIX)objdump)
OBJCOPY := $(abspath $(RISCV_GCC_ROOT)/bin/$(COMPILE_PREFIX)objcopy)
GDB     := $(abspath $(RISCV_GCC_ROOT)/bin/$(COMPILE_PREFIX)gdb)
AR      := $(abspath $(RISCV_GCC_ROOT)/bin/$(COMPILE_PREFIX)ar)
SIZE    := $(abspath $(RISCV_GCC_ROOT)/bin/$(COMPILE_PREFIX)size)
OPENOCD := $(abspath $(RISCV_OPENOCD_ROOT)/bin/openocd)

EXTRA_MKS := $(wildcard Makefile.local $(HBIRD_SDK_BUILD)/Makefile.global)
ifneq ("$(strip $(EXTRA_MKS))", "")
$(info Obtaining addtional make variables from $(EXTRA_MKS))
include $(EXTRA_MKS)
endif
